{"ast":null,"code":"var _jsxFileName = \"/Users/nack/yoga-booking-app/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const signIn = async (email, password) => {\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      return result.user;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const signUp = async (email, password) => {\n    try {\n      const result = await auth.createUserWithEmailAndPassword(email, password);\n      return result.user;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await auth.signOut();\n    } catch (error) {\n      throw error;\n    }\n  };\n  const isAdmin = () => {\n    // Simple admin check - in production, use custom claims or Firestore roles\n    return (user === null || user === void 0 ? void 0 : user.email) === 'admin@yoga.com';\n  };\n  const value = {\n    user,\n    signIn,\n    signUp,\n    logout,\n    isAdmin,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","unsubscribe","onAuthStateChanged","signIn","email","password","result","signInWithEmailAndPassword","error","signUp","createUserWithEmailAndPassword","logout","signOut","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nack/yoga-booking-app/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../services/firebase';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const signIn = async (email, password) => {\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      return result.user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signUp = async (email, password) => {\n    try {\n      const result = await auth.createUserWithEmailAndPassword(email, password);\n      return result.user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await auth.signOut();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const isAdmin = () => {\n    // Simple admin check - in production, use custom claims or Firestore roles\n    return user?.email === 'admin@yoga.com';\n  };\n\n  const value = {\n    user,\n    signIn,\n    signUp,\n    logout,\n    isAdmin,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,IAAI,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAGf,IAAI,CAACgB,kBAAkB,CAAEL,IAAI,IAAK;MACpDC,OAAO,CAACD,IAAI,CAAC;MACbG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOC,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMpB,IAAI,CAACqB,0BAA0B,CAACH,KAAK,EAAEC,QAAQ,CAAC;MACrE,OAAOC,MAAM,CAACT,IAAI;IACpB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAOL,KAAK,EAAEC,QAAQ,KAAK;IACxC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMpB,IAAI,CAACwB,8BAA8B,CAACN,KAAK,EAAEC,QAAQ,CAAC;MACzE,OAAOC,MAAM,CAACT,IAAI;IACpB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMzB,IAAI,CAAC0B,OAAO,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMK,OAAO,GAAGA,CAAA,KAAM;IACpB;IACA,OAAO,CAAAhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,KAAK,MAAK,gBAAgB;EACzC,CAAC;EAED,MAAMU,KAAK,GAAG;IACZjB,IAAI;IACJM,MAAM;IACNM,MAAM;IACNE,MAAM;IACNE,OAAO;IACPd;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACvB,GAAA,CA1DWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}